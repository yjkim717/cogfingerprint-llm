Of course. Here is a formal academic abstract based on the provided summary.

***

**Abstract**

The comprehensibility of software comments is a critical, yet often overlooked, factor in software maintenance and collaborative development. While comments are intended to elucidate complex code, their prose can suffer from poor readability, thereby hindering rather than aiding programmer comprehension. This paper addresses this gap by introducing a novel automated tool designed to assess and enhance the textual readability of inline software comments. The methodology leverages established readability metrics, including the Flesch Reading Ease score, to provide developers with real-time, actionable feedback on comment clarity. To empirically validate the tool's efficacy, we conducted a mixed-methods evaluation involving both professional software engineers and computer science students. Participants engaged in code comprehension tasks using codebases with both original and tool-enhanced comments. Results from the study indicate a statistically significant improvement in comprehension accuracy and a reduction in time-on-task for code annotated with the tool's revised comments. These findings substantiate the utility of integrating readability-focused analysis into programmer toolchains and suggest that such augmentation can substantially improve knowledge transfer and reduce cognitive load during software maintenance activities.