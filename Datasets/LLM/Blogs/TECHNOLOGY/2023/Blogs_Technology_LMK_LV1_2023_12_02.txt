As I dug into Elixir in 2023, I stumbled upon an interesting challenge. When piping values into arithmetic functions, Elixir's syntax encourages a certain elegance. However, not all operations are commutative. Take subtraction, for instance. The expression `10 |> &-(&1, 5)` doesn't read as naturally as `10 |> &+/2` for addition. Elixir's pipe operator (`|>`) shines when used idiomatically, but forcing it with non-commutative operations can feel contrived. This got me thinking - while Elixir's multi-parametric pipes offer flexibility, sometimes clarity trumps conciseness. I'm now more mindful of when to use pipes and when to opt for a more straightforward approach.