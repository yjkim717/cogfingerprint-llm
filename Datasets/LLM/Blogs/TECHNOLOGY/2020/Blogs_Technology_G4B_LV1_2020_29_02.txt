Okay, here’s a blog post draft inspired by your summary, aiming for a conversational tone and around 147 words, set in 2020:

---

**Macros & Modern Code: Still Relevant in 2020?**

Okay, so I was diving back into some older C code last week – specifically, how macros were used for variable declarations. It’s a really fascinating, albeit slightly unsettling, piece of history.  I mean, in 2020, with all the tooling and language features we have, it feels… almost aggressively terse. 

I kept wondering, why did developers spend so much time crafting these macro definitions? It seemed to prioritize brevity over, frankly, code readability.  It makes you think about the trade-offs early language designers faced – speed of development versus maintainability. 

It’s a reminder that every design choice has a story, and sometimes, those choices look a little strange from a 2020 perspective.  What do you think – are macros a valuable relic, or a design flaw waiting to be rediscovered?