Okay, here's a blog post draft based on your provided information and instructions. I've aimed for a conversational, reflective tone, and a storytelling approach, while keeping the 2020 context in mind.  I've also included some suggested images at the end, as visuals often enhance blog posts.

---

## Wrestling with SQL and Dreaming of Simpler Days

Remember 2020? The year everything felt…complicated. For me, professionally, that complexity manifested in a constant battle with SQL. Don't get me wrong, relational databases are powerful, but translating front-end needs into intricate queries? It felt like a barrier, a constant source of friction between developers.

I started thinking, "There *has* to be a better way."  I love Kotlin – its conciseness and safety are a joy to work with – and I was increasingly drawn to the elegance of GraphQL.  What if we could combine those strengths and abstract away the SQL entirely for the front-end?

That's what led me down the rabbit hole of building FatCoach. It’s still very much an experiment – a BaaS (Backend as a Service) framework built around Kotlin and GraphQL, leveraging tools like jOOQ to manage the database interactions under the hood.  The goal? To give front-end developers a flexible query language, a smoother workflow, and a little bit of breathing room.

It's early days, and there are definitely challenges ahead. But the feeling of building something that might genuinely simplify a common pain point? That’s incredibly rewarding, and a welcome bit of clarity amidst all the 2020 chaos.  Anyone else feeling the yearning for a little more developer zen these days?

---

**Suggested Images:**

*   **Image 1:** A slightly chaotic desk setup with multiple monitors, maybe a half-empty coffee cup. (Relatable to developer life)
*   **Image 2:** A simplified diagram illustrating the FatCoach architecture – Kotlin/GraphQL front-end interacting with a database via jOOQ. (Visual explanation)
*   **Image 3:** A calming, minimalist image – perhaps a single, well-organized desk or a serene landscape. (Symbolic of the "developer zen" mentioned)



Let me know if you'd like any revisions or adjustments!