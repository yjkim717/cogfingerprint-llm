Year: 2022
Author: Goldziher
URL: https://www.reddit.com/r/golang/comments/twx02x/should_tests_and_mocks_be_in_a_test_package_or/

So, argument going with my collegue. She insists that the mock she wrote needs to be in the same package as the one she is mocking (not required by implementation). In my opinion testing code should be separate from the application code, and be namespaced with `_test` on the package level. There is this stackoverflow question: But I really disagree with the notion of "white box" testing going on there. Aside from the fact this is a wrong use of the term white box (I do know whats the code and what are the expected inputs and outputs), I believe that unit testing should focus on the ins and outs of interfaces, not on the internal implementation. If the internal implementation cannot be tested from outside by being activated in a test case, there is a good chance its redundant. In fact, i usually have 100% code coverage (yes I know people don't like this number), and I never use the same namespace. I'd say that if one needs to access private members of a package for testing, something is not right with the design. But, I'd like to hear more opinions then my own and hers. Is there any merit to mixing testing logic with source code and not separating packages?
